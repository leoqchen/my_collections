# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

alias mygrep="grep --exclude-dir=\.git --exclude-dir=\.svn --exclude-dir=\.hg --exclude-dir=log --exclude-dir=*/app/build/intermediates --exclude-dir=cmake-build-debug --exclude-dir=obj --exclude=tags --exclude=\.gitignore --exclude=\.class --exclude=*\.o --exclude=*\.d --exclude=*\.so --exclude=*\.apk --exclude=*\.ap_ --exclude=*\gmon.*.txt --color=always"
alias mygrepc="grep --exclude-dir=\.git --exclude-dir=\.svn --exclude-dir=\.hg --exclude-dir=log --exclude-dir=*/app/build/intermediates --exclude=tags --exclude=\.gitignore --exclude=\.class --exclude=*\.o --exclude=*\.d --exclude=*\.so --exclude=*\.apk --exclude=*\.ap_ --exclude=*\gmon.*.txt  --exclude-dir=MyPhoenix2 --exclude-dir=MyPhoenix3"
alias mysign="apksigner verify  --print-certs"
alias myapk2jar="/opt/dex2jar-2.0/d2j-dex2jar.sh"
alias myjdgui="/opt/jd-gui/jd-gui-1.4.0.jar"
alias myverify="/home/leochen/tmp/ps2/pcsx2_foo/pcsx2.cutS5/MyPhoenix3/myverify.sh"
alias ojava="/usr/bin/java"
alias jiagu360="/usr/bin/java -jar /home/leochen/360jiagubaoVip_linux/jiagu/jiagu.jar"
alias myjiagu="/home/leochen/tmp/ps2/pcsx2_foo/pcsx2.cutS5/MyPhoenix3/myjiagu.sh"
alias TestDamonFileLog="/home/leochen/tmp/ps2/pcsx2_foo/pcsx2.cutS5/Lark/damonFile/obj/TestDamonFileLog"
alias isoMain="/home/leochen/wrk/pcsx2_foo.branch/pcsx2.iso/obj/x86_64/pcsx2/isoMain"

export PATH=/sbin:$PATH

#让terminal显示英文出错信息
#export LANG=en_U.UTF-8
#export LANGUAGE=en_US.UTF-8

export PATH=/opt/oprofile/bin:$PATH
export PATH=/opt:$PATH
export USE_CCACHE=1

#for pkg-config can find the 32-bit library under 64-bit linux
export PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig:$PKG_CONFIG_PATH

export ANDROID_SDK_HOME=/opt/Android/Sdk
export ANDROID_SDK_ROOT=${ANDROID_SDK_HOME}
export ANDROID_HOME=${ANDROID_SDK_HOME}
export PATH=${ANDROID_SDK_HOME}/platform-tools:$PATH
export PATH=${ANDROID_SDK_HOME}/tools/proguard/bin:$PATH
export PATH=${ANDROID_SDK_HOME}/build-tools/26.0.2:$PATH

export ANDROID_NDK_HOME=${ANDROID_SDK_HOME}/ndk/android-ndk-r25b
export ANDROID_NDK_ROOT=${ANDROID_NDK_HOME}
export PATH=${ANDROID_NDK_HOME}:$PATH
export PATH=/opt/android-studio/jre/bin:$PATH
export PATH=:~/.local/bin/:$PATH
#export PATH=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
#export PATH=${ANDROID_NDK_HOME}/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin:$PATH

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/SDL2/lib

alias myandroid_debugkeystore="keytool -exportcert -list -v -alias androiddebugkey -keystore ~/.android/debug.keystore"
alias myandroid_startdebug_firebase_analytics="adb shell setprop debug.firebase.analytics.app"
alias myandroid_stopdebug_firebase_analytics="adb shell setprop debug.firebase.analytics.app .none."

export HISTTIMEFORMAT="%F %T "

#eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
